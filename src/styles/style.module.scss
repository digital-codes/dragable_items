/* =========================================================
   Global variables
   ========================================================= */
:root {
  --bg-light: #f9f9f9;
  --bg-dark: #1e1e1e;

  --text-light: #111;
  --text-dark: #eee;

  --border-light: #ddd;
  --border-dark: #444;

  --control-bg-light: #fff;
  --control-bg-dark: #2a2a2a;

  --control-hover-light: #f0f0f0;
  --control-hover-dark: #333;

  --header-height: 60px;
  --gap: 8px;
}

/* =========================================================
   Base and viewport locking (global, even in CSS Modules)
   ========================================================= */
:global(html),
:global(body) {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden; /* no page scroll; internal containers scroll */
  box-sizing: border-box;
}

:global(*),
:global(*::before),
:global(*::after) {
  box-sizing: inherit;
}

/* =========================================================
   App container + theming
   ========================================================= */
:global(.app-container) {
  height: 100vh;
  display: flex;
  flex-direction: column;
  background: var(--bg-light);
  color: var(--text-light);
  font-family: "Roboto", system-ui, -apple-system, Segoe UI, Helvetica, Arial, sans-serif;
}

:global(.app-container.dark) {
  background: var(--bg-dark);
  color: var(--text-dark);
}

/* =========================================================
   Header (fixed on top)
   ========================================================= */
:global(.app-header) {
  position: sticky;
  top: 0;
  z-index: 10;
  height: var(--header-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 12px;
  background: inherit;
  border-bottom: 1px solid var(--border-light);
}

:global(.app-container.dark) :global(.app-header) {
  border-bottom: 1px solid var(--border-dark);
}

/* =========================================================
   Themed buttons (submit + theme toggle)
   ========================================================= */

/* Shared styles */
:global(.app-header .submit-btn),
:global(.app-header .theme-toggle) {
  padding: 8px 12px;
  border-radius: 6px;
  border: 1px solid;
  background: transparent;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 6px;
  font: inherit;
  transition: background 0.2s ease, color 0.2s ease, border-color 0.2s ease;

  svg {
    width: 20px;
    height: 20px;
    fill: currentColor;
  }
}

/* Light theme */
:global(.app-container.light) :global(.submit-btn),
:global(.app-container.light) :global(.theme-toggle) {
  color: var(--text-light);
  border-color: var(--border-light);
  background: #fff;

  &:hover {
    background: #f0f0f0;
  }
}

/* Dark theme */
:global(.app-container.dark) :global(.submit-btn),
:global(.app-container.dark) :global(.theme-toggle) {
  color: var(--text-dark);
  border-color: var(--border-dark);
  background: #2a2a2a;

  &:hover {
    background: #333;
  }
}

:global(.app-header .status) {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}
:global(.app-header .spinner) {
  width: 16px;
  height: 16px;
  border: 2px solid currentColor;
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* =========================================================
   Wrapper: full available height below header
   ========================================================= */
:global(.wrapper) {
  height: calc(100vh - var(--header-height));
  display: grid;
  gap: var(--gap);
  padding: var(--gap);
  /* Important for child scroll areas to work in CSS grid */
  min-height: 0;
}

/* -------- Wide screens: 4 columns (CardList wide + 3 fields) -------- */
@media (min-width: 1200px) {
  :global(.wrapper) {
    grid-template-columns: 2fr 1fr 1fr 1fr; /* 4 columns total */
    grid-template-rows: minmax(0, 1fr);     /* single row fills height */
    grid-auto-flow: row;
  }

  :global(.cardlist-container) {
    grid-column: 1 / 2;     /* first column */
    grid-row: 1;
  }

  /* Place the 3 edit fields as a single area that spans 3 columns.
     Inside it we’ll grid the fields into 3 equal columns. */
  :global(.editfields-container) {
    grid-column: 2 / 5;     /* columns 2,3,4 */
    grid-row: 1;
  }
}

/* -------- Narrow screens: CardList full row above; 3 fields below -------- */
@media (max-width: 1199px) {
  :global(.wrapper) {
    grid-template-columns: repeat(3, 1fr);         /* 3 columns */
    grid-template-rows: minmax(0, 1fr) minmax(0, 1fr); /* 2 rows, equal height */
    grid-auto-flow: row;
  }

  :global(.cardlist-container) {
    grid-column: 1 / -1;   /* span all 3 columns */
    grid-row: 1;
  }

  :global(.editfields-container) {
    grid-column: 1 / -1;   /* span all 3 columns */
    grid-row: 2;
  }
}

/* =========================================================
   CardList + EditFields containers (don’t scroll; their children do)
   ========================================================= */
:global(.cardlist-container),
:global(.editfields-container) {
  /* Stretch to fill their grid cell and let inner content manage scroll. */
  min-height: 0;  /* critical so children can scroll */
  min-width: 0;
  border: 1px solid var(--border-light);
  border-radius: 8px;
  background: transparent;
  overflow: hidden; /* keep scroll inside the card components */
}

:global(.app-container.dark) :global(.cardlist-container),
:global(.app-container.dark) :global(.editfields-container) {
  border: 1px solid var(--border-dark);
}

/* =========================================================
   Inside the EditFields area: always horizontal, 3 columns
   ========================================================= */
:global(.editfields-container) {
  display: grid;
  grid-template-columns: repeat(3, 1fr);  /* always 3 columns */
  grid-template-rows: minmax(0, 1fr);
  gap: var(--gap);
  padding: var(--gap);
  min-height: 0; /* allow children to scroll */
}

:global(.editfields-container) > * {
  min-width: 0;
  min-height: 0;
  /* Make each EditField child stretch to fill; internal scroll stays inside */
  display: flex;
  flex-direction: column;
}

:global(.editfield) {
  border: 1px solid var(--border-light);
}
:global(.app-container.dark) :global(.editfield) {
  border: 1px solid var(--border-dark);
}


/* =========================================================
   Card headers (title + controls row)
   ========================================================= */
:global(.cardHeader) {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  padding: 0.25rem 0.5rem;
  border-bottom: 1px solid var(--border-light);
}

:global(.app-container.dark) :global(.cardHeader) {
  border-bottom: 1px solid var(--border-dark);
}

:global(.cardHeader h3) {
  margin: 0;
  font-size: 1rem;
  font-weight: 600;
  flex: 0 0 auto; /* don’t grow/shrink */
}

/* Controls container — push all controls to the right */
:global(.cardHeader select),
:global(.cardHeader button) {
  font: inherit;
  padding: 4px 8px;
  border-radius: 4px;
  border: 1px solid currentColor;
  background: transparent;
  cursor: pointer;
}

/* Make selects bigger than buttons (triple width) */
:global(.cardHeader select) {
  flex: 3 1 auto;  /* 3× relative to button */
  min-width: 120px;
}

:global(.cardHeader button) {
  flex: 1 1 auto;
  min-width: 40px;
}

/* Align controls neatly in one row, to the right */
:global(.cardHeader) > *:not(h3) {
  margin-left: 8px;
}

/* Light theme controls */
:global(.app-container.light) :global(.cardHeader select),
:global(.app-container.light) :global(.cardHeader button) {
  background: var(--control-bg-light);
  border-color: var(--border-light);
  color: var(--text-light);

  &:hover {
    background: var(--control-hover-light);
  }
}

/* Dark theme controls */
:global(.app-container.dark) :global(.cardHeader select),
:global(.app-container.dark) :global(.cardHeader button) {
  background: var(--control-bg-dark);
  border-color: var(--border-dark);
  color: var(--text-dark);

  &:hover {
    background: var(--control-hover-dark);
  }
}


/* =========================================================
   Draggable list item
   ========================================================= */
/* Normal draggable item */
.listItem {
  display: flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-top: 1px solid var(--border-light);
  background: var(--control-bg-light);
  box-sizing: border-box;
  transition: background 0.2s ease;
}

.app-container.dark .listItem {
  border-top: 1px solid var(--border-dark);
  background: var(--control-bg-dark);
}

/* Fixed item */
.listItem.fixed {
  background: var(--bg-light);
  color: #555;
}
.app-container.dark .listItem.fixed {
  background: var(--bg-dark);
  color: #aaa;
}

/* ===== SortableJS drag states ===== */

/* The chosen item (picked up) */
.listItem.sortable-chosen {
  opacity: 0.7;
  background: #ffd966; /* light yellow highlight */
}
.app-container.dark .listItem.sortable-chosen {
  background: #665500; /* darker yellow in dark mode */
}

/* The ghost (placeholder following mouse) */
.listItem.sortable-ghost {
  opacity: 0.5;
  border: 2px dashed var(--border-light);
  background: transparent;
}
.app-container.dark .listItem.sortable-ghost {
  border: 2px dashed var(--border-dark);
}

/* The item being dragged out of DOM */
.listItem.sortable-drag {
  opacity: 0.5;
  transform: rotate(2deg);
}


// textarea
:global(.editTextarea) {
  width: 100%;
  height: 100%;
  min-height: 0;
  resize: none;
  overflow-y: auto;
  padding: 0.5rem;
  border: 1px solid var(--border-light);
  border-radius: 4px;
  font-family: inherit;
  font-size: 0.95rem;
  background: var(--control-bg-light);
  color: var(--text-light);
  box-sizing: border-box;
}

:global(.app-container.dark) :global(.editTextarea) {
  border: 1px solid var(--border-dark);
  background: var(--control-bg-dark);
  color: var(--text-dark);
}
